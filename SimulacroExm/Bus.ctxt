#BlueJ class context
comment0.target=Bus
comment0.text=\r\n\ Clase\ autobus\r\n\ \r\n\ @author\ Ricardo\ Marqu\u00E9s\ Garay\r\n\ @version\ 04/06/2019\r\n
comment1.params=
comment1.target=Bus()
comment1.text=\r\n\ Constructor\ sin\ par\u00E1metros\r\n
comment2.params=driverPresent\ availableSeats
comment2.target=Bus(boolean,\ int)
comment2.text=\r\n\ Constructor\ con\ 2\ par\u00E1metros\r\n
comment3.params=driverPresent
comment3.target=void\ setDriverPresent(boolean)
comment3.text=\ Metodo\ que\ cambia\ si\ hay\ o\ no\ conductor\r\n\ \ @param\ el\ conductor\ de\ tipo\ boolean\r\n
comment4.params=
comment4.target=boolean\ getDriverPresent()
comment4.text=\ Metodo\ que\ te\ dice\ que\ conductor\ hay\r\n\ \ @return\ el\ conductor\ de\ tipo\ boolean\r\n
comment5.params=availableSeats
comment5.target=void\ setAvailableSeats(int)
comment5.text=\ Metodo\ que\ cambia\ los\ asientos\ libres\r\n\ \ @param\ asientos\ libres\ de\ tipo\ int\r\n
comment6.params=
comment6.target=int\ getAvailableSeats()
comment6.text=\ Metodo\ que\ te\ los\ asientos\ libres\ que\ hay\r\n\ \ @return\ asientos\ libres\ de\ tipo\ int\r\n
comment7.params=
comment7.target=void\ sitDriver()
comment7.text=\r\n\ Metodo\ que\ pone\ un\ conductor\r\n\ @return\ conductor(true)\ de\ tipo\ boolean\r\n
comment8.params=pasajeros
comment8.target=boolean\ getOn(int)
comment8.text=\ M\u00E9todo\ para\ contar\ los\ pasajeros\ en\ el\ bus\r\n\ @param\ numero\ de\ pasajeros\ que\ quieres\ subir\ de\ tipo\ int\r\n\ @return\ false,\ si\ no\ hay\ conductor\r\n\ @return\ true\ y\ cambia\ el\ numero\ de\ asientos\ libres\r\n
comment9.params=
comment9.target=java.lang.String\ toStrin()
comment9.text=\r\n\ Metodo\ que\ devuelve\ una\ cadena\ de\ informaci\u00F3n\r\n\ @return\ una\ cadena\ de\ informacion\ de\ tipo\ String\r\n\ @return\ Por\ Ej\ "ON\ DUTY-23"\r\n
numComments=10
